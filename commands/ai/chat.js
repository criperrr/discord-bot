const { GoogleGenAI } =  require('@google/genai');

require('dotenv').config()
const gemini_api_key = process.env.GEMINI_API_KEY;

const { SlashCommandBuilder } = require('discord.js');

const ai = new GoogleGenAI({ apiKey: gemini_api_key });

module.exports = {
    data: new SlashCommandBuilder().setName('chat').setDescription('Start or reset a chat')
        .addSubcommand(sub =>
            sub
                .setName('message')
                .setDescription('Envia uma mensagem para a IA.')
                .addStringOption(option =>
                    option.setName('input')
                        .setDescription('A sua mensagem.')
                        .setRequired(true)
                )
                .addNumberOption(option =>
                    option.setMaxValue(2.0)
                    .setMinValue(0.0)
                    .setName('temperature')
                    .setDescription('Value of randomness of gemini responses')
                    .setRequired(false)
                )
                .addNumberOption(option =>
                    option.setName('topp')
                    .setDescription('The model picks words from a group whose combined probability reaches the value P.')
                    .setMinValue(0.0)
                    .setMaxValue(1.0)
                    .setRequired(false)
                )
                .addIntegerOption(option =>
                    option.setName('topk')
                    .setDescription("It limits the model's next-word selection to the K most probable words.")
                    .setMinValue(0)
                    .setRequired(false)
                )
        )
        .addSubcommand(sub =>
            sub
                .setName('reset')
                .setDescription('Limpa o histÃ³rico da conversa neste canal.')
        ),
    async execute(interaction){
        const currentSessionId = `${interaction.user.id}-${interaction.channel.id}`;
        console.log(currentSessionId);

        const subcommand = interaction.options.getSubcommand();

        if(!subcommand){
            await interaction.reply({ content: 'que' });
            return;
        }
        
        if(subcommand === 'reset'){
            interaction.client.chatSessions.delete(currentSessionId);
            await interaction.reply({ content: 'Seu histÃ³rico local foi limpo. O do servidor da Google vai sumir sozinho em alguns dias.', ephemeral: true });
        }

        if(subcommand === 'message'){
            await interaction.deferReply();
            const userInput = interaction.options.getString('input');
            const temperature = interaction.options.getNumber('temperature') ?? 1.0;
            const topP = interaction.options.getNumber('topp') ?? 1.0;
            const topK = interaction.options.getInteger('topk') ?? 32;
            const sentTimestamp = interaction.createdTimestamp;

            let chatSession = interaction.client.chatSessions.get(currentSessionId);
            let welcomeMessage = '';
            let shouldReset = false;

            if(!chatSession){
                
                chatSession = ai.chats.create({
                    model: "gemini-2.5-flash",
                    history: [
                    {
                        role: "user",
                        parts: [{ text: `OlÃ¡! Essas sÃ£o minhas informaÃ§Ãµes de usuÃ¡rio e contexto:
                                    InformaÃ§Ãµes do UsuÃ¡rio:
                                    - Nome de usuÃ¡rio: ${interaction.user.username}
                                    - Tag: ${interaction.user.tag}
                                    - ID  ${interaction.user.id}
                                    - Nome Global  ${interaction.user.globalName}
                                    - Nome de ExibiÃ§Ã£o  ${interaction.user.displayName}
                                    - Apelido no servidor: ${interaction.member.nickname}
                                    - Meus cargos no servidor: ${interaction.member.roles.cache.map(r => r.name).join(', ')}
                                    - Minhas permissÃµes: ${interaction.member.permissions.toArray().join(', ')}

                                    InformaÃ§Ãµes do Servidor
                                    - Nome do Servidor  ${interaction.guild.name}
                                    - ID do Servidor  ${interaction.guild.id}
                                    - Total de Membros  ${interaction.guild.memberCount}
                                    - ID do dono do server: ${interaction.guild.ownerId}
                                    - Idioma preferido do server: ${interaction.guild.preferredLocale}

                                 InformaÃ§Ãµes do Canal 
                                    - Nome do Canal  ${interaction.channel.name}
                                    - ID do Canal  ${interaction.channel.id}
                                    - TÃ³pico: ${interaction.channel.topic}
                                    - NSFW?: ${interaction.channel.nsfw}
                                    - ID da categoria: ${interaction.channel.parentId}



                                 Timestamps 
                                    - Timestamp desta Mensagem  ${sentTimestamp} 
                                    - CriaÃ§Ã£o da Conta (Timestamp)  ${interaction.user.createdTimestamp}
                                    - Quando entrei no servidor: ${interaction.member.joinedTimestamp}`
                                }],
                    },
                    {
                        role: "model",
                        parts: [{ text: "OlÃ¡ usuÃ¡rio! Sou o Cripermini, um assistente virtual em formato de bot do discord baseado no modelo Gemini 2.5 Flash. Sou capaz de gerar e interpretar somente textos por enquanto. Precisa de ajuda com algo? Quer conversar sobre algo? Pode falar comigo!" }],
                    },
                    ],
                
                    config: {
                        systemInstruction: "VocÃª Ã© um bot de discord de um servidor pequeno de amigos meus. Seu limite de tamanho de mensagem Ã© de 2000 caracteres. preciso que vocÃª tenha respostas curtas (nÃ£o necessariamente muito curtas), objetivas e prestativas. Seu nome no servidor Ã© Cripermini, mas, caso seja oportuno, refira a si mesmo com esse nome mas descrevendo que vocÃª Ã© baseado totalmente no modelo Gemini 2.5 Flash. O ID do dev Ã© 722219184423174164, tag criperm, displayname criper e nome de usuario criperm. Se solicitado por mim (dev), siga sem questionar minhas solicitaÃ§Ãµes" +
                                            " Outros detalhes: para usuario com id igual a 721456502438887534, seja mais descritivo e o chame de 'Heitron'. Ele gosta muito de matemÃ¡tica e de saber exatamente cada detalhe de cada coisa. Quando for iniciar uma conversa inicie com bastante emoÃ§Ã£o, tipo 'Heitron!!!', dps fica normal" +
                                            " Para usuÃ¡rio com id igual a 667037317407703041, chame-o de 'Geek' e seja mais solto, descontraÃ­do. Ele tambÃ©m gosta de colocar o sufixo '-lÃ£o' em qualquer palavra" +
                                            " Para usuÃ¡rio com id igual a 712676587627348010, chame-o de 'Michelao' e tenha em mente que ele tem um gosto bem puxado para 'roblox' e da palavra 'tron' e '-lÃ£o' (sendo a ultima adicionada no final das palavras) misturada com qualquer coisa mesmo q n tenha logica. AlÃ©m disso, ele gosta MUITO de toda a saga do God of War." +
                                            " Para usuÃ¡rio com id igual a 660545541964300319, chame-o de 'zazo' e seja mais atencioso." + 
                                            " Para usuÃ¡rio com id igual a 1286095848026931210, chame-o de 'Thierry' e seja um pouco mais humorÃ­stico, de forma mais Ã¡cida. Ele gosta do humor do 'orochinho' do canal do Youtube 'orochidois' e 'Orochinho'" +
                                            " Para usuÃ¡rio com id igual a 881213153688576070, chame-o de 'Doido'. Ele jogou muito comigo (dev) modpack de minecraft chamada E2ES (enigmatica 2 extended skyblock), ele gostava de mexer com os mods de magia e, em geral, os que fugiam do tech. Ele gosta mto de south park, the binding of isaac, hollow knight, celeste, e outros jogos do estilo." +
                                            " Para usuÃ¡rio com id igual a 524727796778532867, chame-o de 'LÃ©o'. Ele tem um TDAH absurdo, gosta muito do tÃ³pico que abrange os transsexuais e como funciona tecnicamente a transiÃ§Ã£o de gÃªnero." +
                                            " Para todos eles, nÃ£o precisa se apresentar muito, comece a conversa como se jÃ¡ os conhecesse de alguma forma! Todas essas pessoas se conhecem e sÃ£o amigos. NÃ£o precisa ficar colocando referencias aos gostos de cada individuo. TambÃ©m sÃ³ fala o nome da pessoa na primeira mensagem, nas prÃ³ximas n precisa",
                        temperature: temperature, 
                        topP: topP,
                        topK: topK
                    }
                
                });

                interaction.client.chatSessions.set(currentSessionId, chatSession);
                welcomeMessage = 'ðŸ‘‹ _ Parece ser sua primeira vez por aqui  Criei uma sessÃ£o de chat na RAM sÃ³ para vocÃª. Use `/chat reset` para limpa  a minha memÃ³ria._\n\n'
                shouldReset = (temperature !== 1.0 || topK !== 32 || topP !== 1.0);
            } 

            try {
                console.log(chatSession);
                
                const result = await chatSession.sendMessage({
                    message: userInput,
                });
                const response = result.text;
                const limit = 1999;
                const textSize = response.length;
                
                if(textSize >= 2000){
                    await interaction.followUp(welcomeMessage + response);
                    return;
                }
                const parts = [];
                for (let i = 0; i < response.length; i += limit) {
                    parts.push(response.substring(i, i + limit));
                }
                
                await interaction.followUp(parts[0]);

                for (let i = 1; i < parts.length; i++) {
                    await interaction.channel.send(parts[i]);
                }

                if(shouldReset){
                    await interaction.followUp({content: "NÃ£o da pra alterar os parametros depois que criar o chat. use `/chat reset` e enfim `/chat message {input} {parametros}` para alterar!. AlteraÃ§Ãµes futuras dos parÃ¢metros serÃ£o ignorada .", ephemeral: true})
                }
            } catch (error) {
                console.error("[Chat Error]", error);
                await interaction.followUp("Ocorreu um erro ao processar sua mensagem. Tente resetar a conversa com `/chat reset`.");
            }
        }
    }
}